{
  "service": {
    "service": "audit-trail",
    "serviceObject": {
      "name": "audit-trail"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([^{}]+?)}",
      "name": "aws",
      "region": "us-east-1",
      "runtime": "python3.6",
      "environment": {
        "BUCKET": "faas-iisc",
        "FOLDER": "audit-trail",
        "PORTFOLIOS": "portfolios.json"
      },
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "FetchPortfolioDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/audit-trail-dev-fetchPortfolioData"
            }
          },
          "FetchMarketDataLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/audit-trail-dev-fetchMarketData"
            }
          },
          "CheckMarginAccountBalanceLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/audit-trail-dev-checkMarginAccountBalance"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "audit-trail-dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/audit-trail-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/audit-trail-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "audit-trail-dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "FetchPortfolioDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/audit-trail/dev/1585565511755-2020-03-30T10:51:51.755Z/audit-trail.zip"
              },
              "FunctionName": "audit-trail-dev-fetchPortfolioData",
              "Handler": "portfoliodata.fetchPortfolioData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "BUCKET": "faas-iisc",
                  "FOLDER": "audit-trail",
                  "PORTFOLIOS": "portfolios.json"
                }
              }
            },
            "DependsOn": [
              "FetchPortfolioDataLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "FetchPortfolioDataLambdaVersionaFMqK2MW7wt83FoaqRftpP9iIxlYAWUxcuk8dSwNev8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FetchPortfolioDataLambdaFunction"
              },
              "CodeSha256": "7JysMR5QtwyCHifjTUlVwjnDU71jMZ5Pwi3N7R00+II="
            }
          },
          "FetchMarketDataLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/audit-trail/dev/1585565511755-2020-03-30T10:51:51.755Z/audit-trail.zip"
              },
              "FunctionName": "audit-trail-dev-fetchMarketData",
              "Handler": "marketdata.marketData",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "BUCKET": "faas-iisc",
                  "FOLDER": "audit-trail",
                  "PORTFOLIOS": "portfolios.json"
                }
              }
            },
            "DependsOn": [
              "FetchMarketDataLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "FetchMarketDataLambdaVersionGfZG7dKEoRr7Qz9JYjADlNVKNk0J4H1QGpe1FX9sk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FetchMarketDataLambdaFunction"
              },
              "CodeSha256": "7JysMR5QtwyCHifjTUlVwjnDU71jMZ5Pwi3N7R00+II="
            }
          },
          "CheckMarginAccountBalanceLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/audit-trail/dev/1585565511755-2020-03-30T10:51:51.755Z/audit-trail.zip"
              },
              "FunctionName": "audit-trail-dev-checkMarginAccountBalance",
              "Handler": "marginBalance.checkMarginAccountBalance",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 29,
              "Environment": {
                "Variables": {
                  "BUCKET": "faas-iisc",
                  "FOLDER": "audit-trail",
                  "PORTFOLIOS": "portfolios.json"
                }
              }
            },
            "DependsOn": [
              "CheckMarginAccountBalanceLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CheckMarginAccountBalanceLambdaVersionuTpHmHoMPhsVsibQgL9sfIN7gtP6tbLM1nepvm6yAo": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CheckMarginAccountBalanceLambdaFunction"
              },
              "CodeSha256": "7JysMR5QtwyCHifjTUlVwjnDU71jMZ5Pwi3N7R00+II="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-audit-trail",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFetchportfoliodata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fetchPortfolioData",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFetchmarketdata": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fetchMarketData",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceCheckmarginaccountbalance": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "checkMarginAccountBalance",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFetchportfoliodataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFetchportfoliodata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FetchPortfolioDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodFetchmarketdataGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFetchmarketdata"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FetchMarketDataLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodCheckmarginaccountbalanceGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceCheckmarginaccountbalance"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CheckMarginAccountBalanceLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1585565472674": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFetchportfoliodataGet",
              "ApiGatewayMethodFetchmarketdataGet",
              "ApiGatewayMethodCheckmarginaccountbalanceGet"
            ]
          },
          "FetchPortfolioDataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FetchPortfolioDataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FetchMarketDataLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FetchMarketDataLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CheckMarginAccountBalanceLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CheckMarginAccountBalanceLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "FetchPortfolioDataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FetchPortfolioDataLambdaVersionaFMqK2MW7wt83FoaqRftpP9iIxlYAWUxcuk8dSwNev8"
            }
          },
          "FetchMarketDataLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FetchMarketDataLambdaVersionGfZG7dKEoRr7Qz9JYjADlNVKNk0J4H1QGpe1FX9sk"
            }
          },
          "CheckMarginAccountBalanceLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CheckMarginAccountBalanceLambdaVersionuTpHmHoMPhsVsibQgL9sfIN7gtP6tbLM1nepvm6yAo"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": true,
        "noDeploy": [
          "boto3",
          "botocore",
          "docutils",
          "jmespath",
          "pip",
          "python-dateutil",
          "s3transfer",
          "setuptools",
          "six"
        ]
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "fetchPortfolioData": {
        "handler": "portfoliodata.fetchPortfolioData",
        "timeout": 29,
        "events": [
          {
            "http": {
              "path": "fetchPortfolioData",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "audit-trail-dev-fetchPortfolioData",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "FetchPortfolioDataLambdaVersionaFMqK2MW7wt83FoaqRftpP9iIxlYAWUxcuk8dSwNev8"
      },
      "fetchMarketData": {
        "handler": "marketdata.marketData",
        "timeout": 29,
        "events": [
          {
            "http": {
              "path": "fetchMarketData",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "audit-trail-dev-fetchMarketData",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "FetchMarketDataLambdaVersionGfZG7dKEoRr7Qz9JYjADlNVKNk0J4H1QGpe1FX9sk"
      },
      "checkMarginAccountBalance": {
        "handler": "marginBalance.checkMarginAccountBalance",
        "timeout": 29,
        "events": [
          {
            "http": {
              "path": "checkMarginAccountBalance",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "audit-trail-dev-checkMarginAccountBalance",
        "package": {},
        "memory": 1024,
        "runtime": "python3.6",
        "vpc": {},
        "versionLogicalId": "CheckMarginAccountBalanceLambdaVersionuTpHmHoMPhsVsibQgL9sfIN7gtP6tbLM1nepvm6yAo"
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/home/kjj/faas-benchmarks/applications/audit-trail/aws/.serverless/audit-trail.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/audit-trail/dev/1585565511755-2020-03-30T10:51:51.755Z",
    "artifact": "audit-trail.zip"
  }
}